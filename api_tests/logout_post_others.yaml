# Test generated by RoostGPT for test credential-wallet-api using AI Type Open AI and AI Model gpt-4-1106-preview

# RoostTestHash=64d33906e5

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1
  payload:
    path: "logout_post_others.csv"
    fields:
      - "error"
      - "description"
      - "field"
      - "schema_field"
      - "value"
    skipHeader: true
  plugins:
    expect: {}

scenarios:
  - name: "Logout API negative test scenarios"
    flow:
      - post:
          url: "/logout"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          log: "Test: Logout API without payload should result in a Bad Request"
          # Expecting Bad Request due to no payload
          expect:
            - statusCode: 400
            - hasProperty: "error"
            - hasProperty: "description"
          afterResponse: "logResponse"

      - think: 2

      - post:
          url: "/logout"
          headers:
            Authorization: "InvalidAuth {{ $processEnvironment.AUTH_TOKEN }}"
          log: "Test: Logout API with invalid Auth should result in a Bad Request"
          # Expecting Bad Request due to invalid Auth token
          expect:
            - statusCode: 400
            - hasProperty: "error"
            - hasProperty: "description"

      - think: 2

      - post:
          url: "/log-out" # Intentionally invalid URL to test endpoint resiliency
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          log: "Test: Logout API with incorrect URL should fail"
          # URL endpoint is incorrect, should result in some client or server error
          expect:
            - statusCode: 400
            - hasProperty: "error"
            - hasProperty: "description"

      - think: 2

      - post:
          url: "/logout"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            error: "{{ error }}"
            description: "{{ description }}"
            schema_field: "{{ schema_field }}"
          log: "Test: Logout API with incorrect validation fields should result in a Bad Request due to schema validation failure"
          # Using supplied CSV data with potential schema validation issues
          expect:
            - statusCode: 400
            - hasProperty: "error"
            - hasProperty: "description"
            - hasProperty: "schema_field"

functions:
  logResponse:
    - "console.log(`Received response with status: ${response.statusCode}`)"

