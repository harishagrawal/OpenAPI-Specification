# Test generated by RoostGPT for test credential-wallet-api using AI Type Open AI and AI Model gpt-4-1106-preview

# RoostTestHash=6dd436357d

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1
  payload:
    path: "/mnt/data/me_patch_success.csv"
    fields:
      - "name"
      - "image"
      - "settings"
    skipHeader: true
  environments:
    staging:
      target: "https://staging.api.example.com"
  plugins:
    expect: {}

scenarios:
  - scenario: "Update account settings with various valid payloads"
    flow:
      - put:
          url: "/me"
          # Updating user's name and settings
          json:
            name: "{{ name }}"
            settings: "{{ settings }}"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          # Expect API version header and correct update format in the response
          expect:
            - statusCode: 200
            - hasProperty: 'id'
            - hasProperty: 'did'
            - hasProperty: 'name'
            - hasProperty: 'image'
            - hasProperty: 'email'
            - hasProperty: 'settings'
            - hasProperty: 'createdAt'
            - hasProperty: 'updatedAt'
            - hasHeader: 'api-version'
          log: "Update the name and settings for the user."
      - think: 1

      - put:
          url: "/me"
          # Updating only the user image with valid base64 data
          json:
            image: "{{ image }}"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          # Expect API version header and correct image format in the response
          expect:
            - statusCode: 200
            - hasProperty: 'id'
            - hasProperty: 'did'
            - hasProperty: 'name'
            - hasProperty: 'image'
            - hasProperty: 'email'
            - hasProperty: 'settings'
            - hasProperty: 'createdAt'
            - hasProperty: 'updatedAt'
            - hasHeader: 'api-version'
          log: "Update the image for the user by providing base64 encoded data."
      - think: 1

      - put:
          url: "/me"
          # Updating the name with special characters
          json:
            name: "{{ name }}"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          # Expect API version header and correct name pattern in the response
          expect:
            - statusCode: 200
            - hasProperty: 'id'
            - hasProperty: 'did'
            - hasProperty: 'name'
            - hasProperty: 'image'
            - hasProperty: 'email'
            - hasProperty: 'settings'
            - hasProperty: 'createdAt'
            - hasProperty: 'updatedAt'
            - hasHeader: 'api-version'
          log: "Update the user's name with special characters."
      - think: 1

      - put:
          url: "/me"
          # Updating the settings with additional valid properties
          json:
            settings: "{{ settings }}"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          # Expect API version header and settings with additional properties in the response
          expect:
            - statusCode: 200
            - hasProperty: 'id'
            - hasProperty: 'did'
            - hasProperty: 'name'
            - hasProperty: 'image'
            - hasProperty: 'email'
            - hasProperty: 'settings'
            - hasProperty: 'createdAt'
            - hasProperty: 'updatedAt'
            - hasHeader: 'api-version'
          log: "Update settings with additional properties for the user."
      - think: 1

