# Test generated by RoostGPT for test credential-wallet-api using AI Type Open AI and AI Model gpt-4-1106-preview

# RoostTestHash=3122292ee3

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1
  payload:
    path: "login_post_others.csv"
    fields:
      - "email"
      - "otp"
      - "client"
    skipHeader: true
  plugins:
    expect: {}
  defaults:
    headers:
      'Content-Type': 'application/json'

scenarios:
  - name: "Login API Negative Test Scenarios"
    flow:
      # Invalid email format
      - post:
          url: "/login"
          payload: '{"client": "mobile", "email": "{{ email }}", "otp": "{{ otp }}"}'  # Assuming email contains invalid format
          headers:
             Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          log: "Testing with invalid email format"
          expect:
            - statusCode: 400
            - hasProperty: 'error'
            - hasProperty: 'description'

      - think: 1
      
      # Missing required field 'client'
      - post:
          url: "/login"
          payload: '{"email": "{{ email }}", "otp": "123456"}' # client field is missing
          headers:
             Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          log: "Testing without client field"
          expect:
            - statusCode: 400
            - hasProperty: 'error'
            - hasProperty: 'description'

      - think: 1

      # Invalid OTP format
      - post:
          url: "/login"
          payload: '{"client": "mobile", "email": "{{ email }}", "otp": "abcde"}'  # Assuming otp with invalid format
          headers:
             Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          log: "Testing with invalid OTP format"
          expect:
            - statusCode: 400
            - hasProperty: 'error'
            - hasProperty: 'description'

      - think: 1
      
      # Invalid URL
      - post:
          url: "/logi" # Misspelled URL
          payload: '{"client": "mobile", "email": "{{ email }}", "otp": "{{ otp }}"}'
          headers:
             Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          log: "Testing with invalid URL"
          expect:
            - statusCode: 400
            - hasProperty: 'error'
            - hasProperty: 'description'

      - think: 1

      # Invalid authorization token
      - post:
          url: "/login"
          payload: '{"client": "mobile", "email": "{{ email }}", "otp": "{{ otp }}"}'
          headers:
             Authorization: "InvalidToken"
          log: "Testing with invalid authorization token"
          expect:
            - statusCode: 401
            - hasProperty: 'error'
            - hasProperty: 'description'

      - think: 1

