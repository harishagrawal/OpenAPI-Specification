# Test generated by RoostGPT for test credential-wallet-api using AI Type Open AI and AI Model gpt-4

# RoostTestHash=ed8c1b7bff

config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: "authorizations_post_others.csv"
    fields:
      - "email"
    skipHeader: true
scenarios:
  - name: "Test failure cases for /authorizations API"
    flow:
      - think: 5
      - log: "Sending a request without authorization header"
      - post:
          url: "/authorizations"
          headers:
            Content-Type: "application/json"
          json:
            email: "{{ email }}"
          expect:
            - statusCode: 401
            - hasProperty: "headers.api-version"
            - hasProperty: "body.error"
            - hasProperty: "body.description"
          capture:
            - json: "$.error"
              as: "error"
      - log: "Expected error code: 'error/code', Actual error code: '{{ error }}'"
      - think: 5
      - log: "Sending a request with invalid authorization token"
      - post:
          url: "/authorizations"
          headers:
            Content-Type: "application/json"
            Authorization: "InvalidToken"
          json:
            email: "{{ email }}"
          expect:
            - statusCode: 401
            - hasProperty: "headers.api-version"
            - hasProperty: "body.error"
            - hasProperty: "body.description"
          capture:
            - json: "$.error"
              as: "error"
      - log: "Expected error code: 'error/code', Actual error code: '{{ error }}'"
      - think: 5
      - log: "Sending a request with valid authorization token but with missing email field in the payload"
      - post:
          url: "/authorizations"
          headers:
            Content-Type: "application/json"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json: {}
          expect:
            - statusCode: 400
            - hasProperty: "headers.api-version"
            - hasProperty: "body.error"
            - hasProperty: "body.description"
          capture:
            - json: "$.error"
              as: "error"
      - log: "Expected error code: 'validation/email-pattern', Actual error code: '{{ error }}'"
      - think: 5
      - log: "Sending a request with invalid url"
      - post:
          url: "/invalid-url"
          headers:
            Content-Type: "application/json"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            email: "{{ email }}"
          expect:
            - statusCode: 404
